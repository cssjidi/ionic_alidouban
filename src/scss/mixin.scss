@mixin calc-grid-column($index, $perfix, $type) {
  @if ($type == width) and ($index > 0) {
    .#{$perfix}-col-#{$index} {
      width: percentage(($index / $grid-columns));
    }
  }
  @if ($type == push) and ($index > 0) {
    .#{$perfix}-col-push-#{$index} {
      left: percentage(($index / $grid-columns));
    }
  }
  @if ($type == push) and ($index == 0) {
    .#{$perfix}-col-push-0 {
      left: auto;
    }
  }
  @if ($type == pull) and ($index > 0) {
    .#{$perfix}-col-pull-#{$index} {
      right: percentage(($index / $grid-columns));
    }
  }
  @if ($type == pull) and ($index == 0) {
    .#{$perfix}-col-pull-0 {
      right: auto;
    }
  }
  @if ($type == offset) {
    .#{$perfix}-col-offset-#{$index} {
      margin-left: percentage(($index / $grid-columns));
    }
  }
}

@mixin float-grid-columns($perfix, $i: 1, $list: ".#{$perfix}-col-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .#{$perfix}-col-#{$i}";
  }
  #{$list} {
    float: left;
  }
}


@mixin loop-grid-columns($columns,$perfix,$type){
  @for $i from 0 through $columns{
    @include calc-grid-column($i,$perfix,$type)
  }
}



// Create grid for specific class
@mixin make-grid($perfix) {
  @include float-grid-columns($perfix);
  @include loop-grid-columns($grid-columns, $perfix,width);
  @include loop-grid-columns($grid-columns, $perfix,push);
  @include loop-grid-columns($grid-columns, $perfix,pull);
  @include loop-grid-columns($grid-columns, $perfix,offset);
}


//center
@mixin center(){
  margin:0 auto;
}

//rows
@mixin make-row($gutter:$grid-gutter-width){
  //margin-left:  ceil(($gutter / -2));
  //margin-right: floor(($gutter / -2));
  @include clearfix;
}

//clearfix
@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}
